)
model <- cmdstan_model("../stan_models/hsgp-nb-eq.stan", compile = TRUE)
stan_data <- make_stan_data(dt, "Diabetes")
model_inits <- function(){
list(
beta0 = -log(mean(dt$POPULATION)) + rnorm(1),
z = 0 + rnorm(1, 0, 0.1)
)
}
fit <- model$sample(data = stan_data, seed=123,
chains = 4, parallel_chains = 4,
iter_warmup = 500,
iter_sampling = 1000,
adapt_delta = 0.9,
max_treedepth = 10,
init = model_inits)
# fit$summary(variables = c("beta0", "sigma", "rho1", "rho2"))
fit$summary(variables = c("beta0", "sigma", "rho1", "rho2", "nu"))
color_scheme_set("mix-blue-pink")
po <- fit$draws(variables = c("beta0", "sigma", "rho1", "rho2"))
mcmc_trace(po, facet_args = list(nrow = 4))
mcmc_trace(po, facet_args = list(nrow = 4))
color_scheme_set("mix-blue-pink")
po <- fit$draws(variables = c("beta0", "sigma", "rho1", "rho2", "nu"))
mcmc_trace(po, facet_args = list(nrow = 4))
summarise_loo <- function(fit, cause){
loo <- fit$loo()
dt.loo <- data.table(loo$estimates, keep.rownames = TRUE)
dt.loo$cause <- cause
colnames(dt.loo) <- toupper(colnames(dt.loo))
return(dt.loo)
}
summarise_loo(fit, "Diabetes")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws(variables = "Yhat", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "Yhat\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, IDX := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(IDX, SEX)]
dt.po <- data.table::dcast(dt.po, SEX + IDX ~ q_label, value.var = "q")
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.po[, AGEGRP := age.groups[(IDX - 1) %% 18 + 1]]
dt.po[, YEAR := IDX %/% 18 + 2005]
dt.ppc <- merge(dt[CAUSE == "Diabetes"], dt.po, by=c("YEAR", "SEX", "AGEGRP"))
dt.ppc[, AGEGRP := factor(AGEGRP, levels = age.groups)]
dt.ppc[, inside.CI := COUNT >= CL & COUNT <= CU]
mean(dt.ppc$inside.CI)
ggplot(dt.ppc, aes(YEAR, COUNT)) +
geom_point(aes(color = SEX), size = 0.4) +
geom_line(aes(y = M, color = SEX)) +
geom_ribbon(aes(ymin = CL, ymax = CU, fill = SEX), alpha = 0.4) +
facet_wrap(~AGEGRP, scales = "free_y")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws("AMR", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "AMR\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, YEAR := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(YEAR, SEX)]
dt.po <- data.table::dcast(dt.po, YEAR + SEX ~ q_label, value.var = "q")
dt.po[, YEAR := YEAR - 1 + 2005]
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.amr <- merge(dt.camr[CAUSE == "Diabetes"], dt.po)
ggplot(dt.amr, aes(YEAR, M * 100000)) +
geom_point(aes(y = AMR, color = SEX)) +
geom_line(aes(color = SEX)) +
geom_ribbon(aes(ymin = CL * 100000, ymax = CU * 100000, fill = SEX), alpha = 0.4)
model <- cmdstan_model("../stan_models/hsgp-eq.stan", compile = TRUE)
stan_data <- make_stan_data(dt, "Diabetes")
model_inits <- function(){
list(
beta0 = -log(mean(dt$POPULATION)) + rnorm(1),
z = 0 + rnorm(1, 0, 0.1)
)
}
fit <- model$sample(data = stan_data, seed=123,
chains = 4, parallel_chains = 4,
iter_warmup = 500,
iter_sampling = 1000,
adapt_delta = 0.9,
max_treedepth = 10,
init = model_inits)
fit$cmdstan_diagnose()
fit$summary(variables = c("beta0", "sigma", "rho1", "rho2"))
color_scheme_set("mix-blue-pink")
po <- fit$draws(variables = c("beta0", "sigma", "rho1", "rho2", "nu"))
po <- fit$draws(variables = c("beta0", "sigma", "rho1", "rho2"))
mcmc_trace(po, facet_args = list(nrow = 4))
model <- cmdstan_model("../stan_models/hsgp-eq.stan", compile = TRUE)
stan_data <- make_stan_data(dt, "Diabetes")
model_inits <- function(){
list(
beta0 = -log(mean(dt$POPULATION)) + rnorm(1),
z = 0 + rnorm(1, 0, 0.1)
)
}
fit <- model$sample(data = stan_data, seed=123,
chains = 4, parallel_chains = 4,
iter_warmup = 500,
iter_sampling = 1000,
adapt_delta = 0.9,
max_treedepth = 10,
init = model_inits)
fit$cmdstan_diagnose()
fit$summary(variables = c("beta0", "sigma", "rho1", "rho2"))
color_scheme_set("mix-blue-pink")
po <- fit$draws(variables = c("beta0", "sigma", "rho1", "rho2"))
mcmc_trace(po, facet_args = list(nrow = 4))
model <- cmdstan_model("../stan_models/hsgp-nb-eq.stan", compile = TRUE)
stan_data <- make_stan_data(dt, "Diabetes")
model_inits <- function(){
list(
beta0 = -log(mean(dt$POPULATION)) + rnorm(1),
z = 0 + rnorm(1, 0, 0.1)
)
}
fit <- model$sample(data = stan_data, seed=123,
chains = 4, parallel_chains = 4,
iter_warmup = 500,
iter_sampling = 1000,
adapt_delta = 0.9,
max_treedepth = 10,
init = model_inits)
fit$cmdstan_diagnose()
# fit$summary(variables = c("beta0", "sigma", "rho1", "rho2"))
fit$summary(variables = c("beta0", "sigma", "rho1", "rho2", "theta"))
color_scheme_set("mix-blue-pink")
po <- fit$draws(variables = c("beta0", "sigma", "rho1", "rho2"))
mcmc_trace(po, facet_args = list(nrow = 4))
summarise_loo <- function(fit, cause){
loo <- fit$loo()
dt.loo <- data.table(loo$estimates, keep.rownames = TRUE)
dt.loo$cause <- cause
colnames(dt.loo) <- toupper(colnames(dt.loo))
return(dt.loo)
}
summarise_loo(fit, "Diabetes")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws(variables = "Yhat", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "Yhat\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, IDX := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(IDX, SEX)]
dt.po <- data.table::dcast(dt.po, SEX + IDX ~ q_label, value.var = "q")
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.po[, AGEGRP := age.groups[(IDX - 1) %% 18 + 1]]
dt.po[, YEAR := IDX %/% 18 + 2005]
dt.ppc <- merge(dt[CAUSE == "Diabetes"], dt.po, by=c("YEAR", "SEX", "AGEGRP"))
dt.ppc[, AGEGRP := factor(AGEGRP, levels = age.groups)]
dt.ppc[, inside.CI := COUNT >= CL & COUNT <= CU]
mean(dt.ppc$inside.CI)
ggplot(dt.ppc, aes(YEAR, COUNT)) +
geom_point(aes(color = SEX), size = 0.4) +
geom_line(aes(y = M, color = SEX)) +
geom_ribbon(aes(ymin = CL, ymax = CU, fill = SEX), alpha = 0.4) +
facet_wrap(~AGEGRP, scales = "free_y")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws("AMR", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "AMR\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, YEAR := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(YEAR, SEX)]
dt.po <- data.table::dcast(dt.po, YEAR + SEX ~ q_label, value.var = "q")
dt.po[, YEAR := YEAR - 1 + 2005]
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.amr <- merge(dt.camr[CAUSE == "Diabetes"], dt.po)
ggplot(dt.amr, aes(YEAR, M * 100000)) +
geom_point(aes(y = AMR, color = SEX)) +
geom_line(aes(color = SEX)) +
geom_ribbon(aes(ymin = CL * 100000, ymax = CU * 100000, fill = SEX), alpha = 0.4)
model <- cmdstan_model("../stan_models/hsgp-nb-eq.stan", compile = TRUE)
model <- cmdstan_model("../stan_models/hsgp-nb-eq.stan", compile = TRUE)
fit <- model$sample(data = stan_data, seed=123,
chains = 4, parallel_chains = 4,
iter_warmup = 500,
iter_sampling = 1000,
adapt_delta = 0.9,
max_treedepth = 10,
init = model_inits)
fit$cmdstan_diagnose()
# fit$summary(variables = c("beta0", "sigma", "rho1", "rho2"))
fit$summary(variables = c("beta0", "sigma", "rho1", "rho2", "beta_a", "theta"))
color_scheme_set("mix-blue-pink")
po <- fit$draws(variables = c("beta0", "sigma", "rho1", "rho2"))
mcmc_trace(po, facet_args = list(nrow = 4))
summarise_loo <- function(fit, cause){
loo <- fit$loo()
dt.loo <- data.table(loo$estimates, keep.rownames = TRUE)
dt.loo$cause <- cause
colnames(dt.loo) <- toupper(colnames(dt.loo))
return(dt.loo)
}
summarise_loo(fit, "Diabetes")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws(variables = "Yhat", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "Yhat\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, IDX := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(IDX, SEX)]
dt.po <- data.table::dcast(dt.po, SEX + IDX ~ q_label, value.var = "q")
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.po[, AGEGRP := age.groups[(IDX - 1) %% 18 + 1]]
dt.po[, YEAR := IDX %/% 18 + 2005]
dt.ppc <- merge(dt[CAUSE == "Diabetes"], dt.po, by=c("YEAR", "SEX", "AGEGRP"))
dt.ppc[, AGEGRP := factor(AGEGRP, levels = age.groups)]
dt.ppc[, inside.CI := COUNT >= CL & COUNT <= CU]
mean(dt.ppc$inside.CI)
ggplot(dt.ppc, aes(YEAR, COUNT)) +
geom_point(aes(color = SEX), size = 0.4) +
geom_line(aes(y = M, color = SEX)) +
geom_ribbon(aes(ymin = CL, ymax = CU, fill = SEX), alpha = 0.4) +
facet_wrap(~AGEGRP, scales = "free_y")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws("AMR", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "AMR\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, YEAR := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(YEAR, SEX)]
dt.po <- data.table::dcast(dt.po, YEAR + SEX ~ q_label, value.var = "q")
dt.po[, YEAR := YEAR - 1 + 2005]
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.amr <- merge(dt.camr[CAUSE == "Diabetes"], dt.po)
ggplot(dt.amr, aes(YEAR, M * 100000)) +
geom_point(aes(y = AMR, color = SEX)) +
geom_line(aes(color = SEX)) +
geom_ribbon(aes(ymin = CL * 100000, ymax = CU * 100000, fill = SEX), alpha = 0.4)
model <- cmdstan_model("../stan_models/hsgp-nb-eq.stan", compile = TRUE)
model <- cmdstan_model("../stan_models/hsgp-nb-eq.stan", compile = TRUE)
fit <- model$sample(data = stan_data, seed=123,
chains = 4, parallel_chains = 4,
iter_warmup = 500,
iter_sampling = 1000,
adapt_delta = 0.9,
max_treedepth = 10,
init = model_inits)
fit$cmdstan_diagnose()
# fit$summary(variables = c("beta0", "sigma", "rho1", "rho2"))
fit$summary(variables = c("beta0", "sigma", "rho1", "rho2", "beta_a", "theta"))
color_scheme_set("mix-blue-pink")
po <- fit$draws(variables = c("beta0", "sigma", "rho1", "rho2"))
mcmc_trace(po, facet_args = list(nrow = 4))
summarise_loo <- function(fit, cause){
loo <- fit$loo()
dt.loo <- data.table(loo$estimates, keep.rownames = TRUE)
dt.loo$cause <- cause
colnames(dt.loo) <- toupper(colnames(dt.loo))
return(dt.loo)
}
summarise_loo(fit, "Diabetes")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws(variables = "Yhat", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "Yhat\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, IDX := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(IDX, SEX)]
dt.po <- data.table::dcast(dt.po, SEX + IDX ~ q_label, value.var = "q")
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.po[, AGEGRP := age.groups[(IDX - 1) %% 18 + 1]]
dt.po[, YEAR := IDX %/% 18 + 2005]
dt.ppc <- merge(dt[CAUSE == "Diabetes"], dt.po, by=c("YEAR", "SEX", "AGEGRP"))
dt.ppc[, AGEGRP := factor(AGEGRP, levels = age.groups)]
dt.ppc[, inside.CI := COUNT >= CL & COUNT <= CU]
mean(dt.ppc$inside.CI)
ggplot(dt.ppc, aes(YEAR, COUNT)) +
geom_point(aes(color = SEX), size = 0.4) +
geom_line(aes(y = M, color = SEX)) +
geom_ribbon(aes(ymin = CL, ymax = CU, fill = SEX), alpha = 0.4) +
facet_wrap(~AGEGRP, scales = "free_y")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws("AMR", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "AMR\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, YEAR := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(YEAR, SEX)]
dt.po <- data.table::dcast(dt.po, YEAR + SEX ~ q_label, value.var = "q")
dt.po[, YEAR := YEAR - 1 + 2005]
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.amr <- merge(dt.camr[CAUSE == "Diabetes"], dt.po)
ggplot(dt.amr, aes(YEAR, M * 100000)) +
geom_point(aes(y = AMR, color = SEX)) +
geom_line(aes(color = SEX)) +
geom_ribbon(aes(ymin = CL * 100000, ymax = CU * 100000, fill = SEX), alpha = 0.4)
model <- cmdstan_model("../stan_models/hsgp-nb-eq.stan", compile = TRUE)
fit <- model$sample(data = stan_data, seed=123,
chains = 4, parallel_chains = 4,
iter_warmup = 500,
iter_sampling = 1000,
adapt_delta = 0.9,
max_treedepth = 10,
init = model_inits)
fit$cmdstan_diagnose()
# fit$summary(variables = c("beta0", "sigma", "rho1", "rho2"))
fit$summary(variables = c("beta0", "sigma", "rho1", "rho2", "beta_a", "theta"))
color_scheme_set("mix-blue-pink")
po <- fit$draws(variables = c("beta0", "sigma", "rho1", "rho2"))
mcmc_trace(po, facet_args = list(nrow = 4))
summarise_loo <- function(fit, cause){
loo <- fit$loo()
dt.loo <- data.table(loo$estimates, keep.rownames = TRUE)
dt.loo$cause <- cause
colnames(dt.loo) <- toupper(colnames(dt.loo))
return(dt.loo)
}
summarise_loo(fit, "Diabetes")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws(variables = "Yhat", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "Yhat\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, IDX := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(IDX, SEX)]
dt.po <- data.table::dcast(dt.po, SEX + IDX ~ q_label, value.var = "q")
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.po[, AGEGRP := age.groups[(IDX - 1) %% 18 + 1]]
dt.po[, YEAR := IDX %/% 18 + 2005]
dt.ppc <- merge(dt[CAUSE == "Diabetes"], dt.po, by=c("YEAR", "SEX", "AGEGRP"))
dt.ppc[, AGEGRP := factor(AGEGRP, levels = age.groups)]
dt.ppc[, inside.CI := COUNT >= CL & COUNT <= CU]
mean(dt.ppc$inside.CI)
ggplot(dt.ppc, aes(YEAR, COUNT)) +
geom_point(aes(color = SEX), size = 0.4) +
geom_line(aes(y = M, color = SEX)) +
geom_ribbon(aes(ymin = CL, ymax = CU, fill = SEX), alpha = 0.4) +
facet_wrap(~AGEGRP, scales = "free_y")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws("AMR", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "AMR\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, YEAR := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(YEAR, SEX)]
dt.po <- data.table::dcast(dt.po, YEAR + SEX ~ q_label, value.var = "q")
dt.po[, YEAR := YEAR - 1 + 2005]
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.amr <- merge(dt.camr[CAUSE == "Diabetes"], dt.po)
ggplot(dt.amr, aes(YEAR, M * 100000)) +
geom_point(aes(y = AMR, color = SEX)) +
geom_line(aes(color = SEX)) +
geom_ribbon(aes(ymin = CL * 100000, ymax = CU * 100000, fill = SEX), alpha = 0.4)
source("~/Stanford/CARE 2022/KA-mortality-t10/R/stan-utility.R")
stan_data <- make_stan_data(dt, "Diabetes")
stan_data <- make_stan_data(dt, "Alzheimer")
model_inits <- function(){
list(
beta0 = -log(mean(dt$POPULATION)) + rnorm(1),
z = 0 + rnorm(1, 0, 0.1)
)
}
fit <- model$sample(data = stan_data, seed=123,
chains = 4, parallel_chains = 4,
iter_warmup = 500,
iter_sampling = 1000,
adapt_delta = 0.9,
max_treedepth = 10,
init = model_inits)
fit$cmdstan_diagnose()
# fit$summary(variables = c("beta0", "sigma", "rho1", "rho2"))
fit$summary(variables = c("beta0", "sigma", "rho1", "rho2", "beta_a", "theta"))
color_scheme_set("mix-blue-pink")
po <- fit$draws(variables = c("beta0", "sigma", "rho1", "rho2"))
mcmc_trace(po, facet_args = list(nrow = 4))
summarise_loo <- function(fit, cause){
loo <- fit$loo()
dt.loo <- data.table(loo$estimates, keep.rownames = TRUE)
dt.loo$cause <- cause
colnames(dt.loo) <- toupper(colnames(dt.loo))
return(dt.loo)
}
summarise_loo(fit, "Diabetes")
source("~/Stanford/CARE 2022/KA-mortality-t10/R/stan-utility.R")
summarise_loo <- function(fit, cause){
loo <- fit$loo()
dt.loo <- data.table(loo$estimates, keep.rownames = TRUE)
dt.loo$cause <- cause
colnames(dt.loo) <- toupper(colnames(dt.loo))
return(dt.loo)
}
summarise_loo(fit, "Diabetes")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws(variables = "Yhat", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "Yhat\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, IDX := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(IDX, SEX)]
dt.po <- data.table::dcast(dt.po, SEX + IDX ~ q_label, value.var = "q")
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.po[, AGEGRP := age.groups[(IDX - 1) %% 18 + 1]]
dt.po[, YEAR := IDX %/% 18 + 2005]
dt.ppc <- merge(dt[CAUSE == "Diabetes"], dt.po, by=c("YEAR", "SEX", "AGEGRP"))
dt.ppc[, AGEGRP := factor(AGEGRP, levels = age.groups)]
dt.ppc[, inside.CI := COUNT >= CL & COUNT <= CU]
mean(dt.ppc$inside.CI)
ggplot(dt.ppc, aes(YEAR, COUNT)) +
geom_point(aes(color = SEX), size = 0.4) +
geom_line(aes(y = M, color = SEX)) +
geom_ribbon(aes(ymin = CL, ymax = CU, fill = SEX), alpha = 0.4) +
facet_wrap(~AGEGRP, scales = "free_y")
dt.ppc <- merge(dt[CAUSE == "Alzheimer"], dt.po, by=c("YEAR", "SEX", "AGEGRP"))
dt.ppc[, AGEGRP := factor(AGEGRP, levels = age.groups)]
dt.ppc[, inside.CI := COUNT >= CL & COUNT <= CU]
mean(dt.ppc$inside.CI)
ggplot(dt.ppc, aes(YEAR, COUNT)) +
geom_point(aes(color = SEX), size = 0.4) +
geom_line(aes(y = M, color = SEX)) +
geom_ribbon(aes(ymin = CL, ymax = CU, fill = SEX), alpha = 0.4) +
facet_wrap(~AGEGRP, scales = "free_y")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws("AMR", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "AMR\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, YEAR := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(YEAR, SEX)]
dt.po <- data.table::dcast(dt.po, YEAR + SEX ~ q_label, value.var = "q")
dt.po[, YEAR := YEAR - 1 + 2005]
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.amr <- merge(dt.camr[CAUSE == "Diabetes"], dt.po)
ggplot(dt.amr, aes(YEAR, M * 100000)) +
geom_point(aes(y = AMR, color = SEX)) +
geom_line(aes(color = SEX)) +
geom_ribbon(aes(ymin = CL * 100000, ymax = CU * 100000, fill = SEX), alpha = 0.4)
dt.amr <- merge(dt.camr[CAUSE == "Alzheimer"], dt.po)
ggplot(dt.amr, aes(YEAR, M * 100000)) +
geom_point(aes(y = AMR, color = SEX)) +
geom_line(aes(color = SEX)) +
geom_ribbon(aes(ymin = CL * 100000, ymax = CU * 100000, fill = SEX), alpha = 0.4)
model <- cmdstan_model("../stan_models/hsgp-nb-eq.stan", compile = TRUE)
stan_data <- make_stan_data(dt, "Alzheimer")
model_inits <- function(){
list(
beta0 = -log(mean(dt$POPULATION)) + rnorm(1),
z = 0 + rnorm(1, 0, 0.1)
)
}
fit <- model$sample(data = stan_data, seed=123,
chains = 4, parallel_chains = 4,
iter_warmup = 500,
iter_sampling = 1000,
adapt_delta = 0.9,
max_treedepth = 10,
init = model_inits)
fit$cmdstan_diagnose()
# fit$summary(variables = c("beta0", "sigma", "rho1", "rho2"))
fit$summary(variables = c("beta0", "sigma", "rho1", "rho2", "beta_a", "theta"))
color_scheme_set("mix-blue-pink")
po <- fit$draws(variables = c("beta0", "sigma", "rho1", "rho2"))
mcmc_trace(po, facet_args = list(nrow = 4))
summarise_loo <- function(fit, cause){
loo <- fit$loo()
dt.loo <- data.table(loo$estimates, keep.rownames = TRUE)
dt.loo$cause <- cause
colnames(dt.loo) <- toupper(colnames(dt.loo))
return(dt.loo)
}
summarise_loo(fit, "Diabetes")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws(variables = "Yhat", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "Yhat\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, IDX := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(IDX, SEX)]
dt.po <- data.table::dcast(dt.po, SEX + IDX ~ q_label, value.var = "q")
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.po[, AGEGRP := age.groups[(IDX - 1) %% 18 + 1]]
dt.po[, YEAR := IDX %/% 18 + 2005]
dt.ppc <- merge(dt[CAUSE == "Alzheimer"], dt.po, by=c("YEAR", "SEX", "AGEGRP"))
dt.ppc[, AGEGRP := factor(AGEGRP, levels = age.groups)]
dt.ppc[, inside.CI := COUNT >= CL & COUNT <= CU]
mean(dt.ppc$inside.CI)
ggplot(dt.ppc, aes(YEAR, COUNT)) +
geom_point(aes(color = SEX), size = 0.4) +
geom_line(aes(y = M, color = SEX)) +
geom_ribbon(aes(ymin = CL, ymax = CU, fill = SEX), alpha = 0.4) +
facet_wrap(~AGEGRP, scales = "free_y")
ps <- c(0.5, 0.025, 0.975)
p_labs <- c('M','CL','CU')
po <- fit$draws("AMR", format = "draws_matrix")
dt.po <- as.data.table(reshape2::melt(po))
.pattern <- "AMR\\[([0-9]+),([0-9]+)\\]"
dt.po[, SEX := as.numeric(gsub(.pattern, "\\1", variable))]
dt.po[, YEAR := as.numeric(gsub(.pattern, "\\2", variable))]
dt.po <- dt.po[, list( q=quantile(value, prob=ps, na.rm=T), q_label = p_labs), by=.(YEAR, SEX)]
dt.po <- data.table::dcast(dt.po, YEAR + SEX ~ q_label, value.var = "q")
dt.po[, YEAR := YEAR - 1 + 2005]
dt.po[, SEX := ifelse(SEX == 1, "M", "F")]
dt.amr <- merge(dt.camr[CAUSE == "Alzheimer"], dt.po)
ggplot(dt.amr, aes(YEAR, M * 100000)) +
geom_point(aes(y = AMR, color = SEX)) +
geom_line(aes(color = SEX)) +
geom_ribbon(aes(ymin = CL * 100000, ymax = CU * 100000, fill = SEX), alpha = 0.4)
